<%- include('../../partials/userHeader') %>

<head>
    <style>
        /* Modern Gradient Background */
        .gradient-custom {
            background: linear-gradient(135deg, #6a11cb, #2575fc);
        }

        /* Card Styling */
        .card {
            border: none;
            border-radius: 12px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
            transition: transform 0.2s ease, box-shadow 0.2s ease;
        }

        .card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
        }

        /* Nav Tabs Styling */
        .nav-tabs {
            border-bottom: 2px solid #e9ecef;
        }

        .nav-tabs .nav-link {
            border: none;
            color: #6c757d;
            font-weight: 500;
            border-radius: 8px;
            margin: 0 5px;
            transition: all 0.3s ease;
        }

        .nav-tabs .nav-link.active {
            background: linear-gradient(135deg, #6a11cb, #2575fc);
            color: white;
            border-radius: 8px;
        }

        .nav-tabs .nav-link:hover {
            background: rgba(106, 17, 203, 0.1);
            color: #6a11cb;
        }

        /* Form Styling */
        .form-outline {
            position: relative;
            margin-bottom: 1.5rem;
        }

        .form-outline input {
            border: 1px solid #ced4da;
            border-radius: 8px;
            padding: 10px 15px;
            width: 100%;
            transition: border-color 0.3s ease;
        }

        .form-outline input:focus {
            border-color: #6a11cb;
            box-shadow: 0 0 5px rgba(106, 17, 203, 0.5);
        }

        .form-outline label {
            position: absolute;
            top: 50%;
            left: 15px;
            transform: translateY(-50%);
            background: white;
            padding: 0 5px;
            color: #6c757d;
            transition: all 0.3s ease;
        }

        .form-outline input:focus + label,
        .form-outline input:not(:placeholder-shown) + label {
            top: 0;
            font-size: 12px;
            color: #6a11cb;
        }

        /* Button Styling */
        .btn-primary {
            background: linear-gradient(135deg, #6a11cb, #2575fc);
            border: none;
            border-radius: 8px;
            padding: 10px 20px;
            transition: all 0.3s ease;
        }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(106, 17, 203, 0.3);
        }

        /* Address Card Styling */
        .address-card {
            background: white;
            border-radius: 12px;
            padding: 20px;
            margin-bottom: 20px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

        .address-card h3 {
            color: #333;
            font-weight: 600;
        }

        .address-card p {
            color: #666;
            margin-bottom: 10px;
        }

        .address-card .btn {
            margin: 5px;
        }

        /* Responsive Design */
        @media (max-width: 768px) {
            .nav-tabs .nav-link {
                margin: 5px 0;
            }

            .col-lg-3, .col-lg-9 {
                padding: 0;
            }
        }
    </style>
</head>

<div class="gradient-custom">
    <div class="container py-4">
        <!-- Breadcrumb -->
        <nav class="d-flex">
            <h5 class="mb-0">
                <a href="/" class="text-white-50">Home</a>
                <span class="text-white-50 mx-2"> > </span>
                <a href="/user/profile" class="text-white-50">Profile</a>
                <span class="text-white-50 mx-2"> > </span>
                <a href="/user/address" class="text-white">Address</a>
            </h5>
        </nav>
        <!-- Breadcrumb -->
    </div>
</div>

<section class="pt-5">
    <div class="container">
        <div class="row">
            <!-- Sidebar -->
            <div class="col-lg-3 px-3">
                <div class="account-nav rounded shadow bg-white p-4">
                    <div class="text-center mb-4">
                        <h4 class="mb-0">Hi <%= user.name %></h4>
                        <p class="text-muted">Your personal dashboard</p>
                    </div>
                    <div class="text-center my-3">
                        <a class="nav-link" href="/user/viewCart">
                            <i class="fa-solid fa-wallet me-1"></i>Wallet Amount: <%= user.wallet.toFixed(2) %>
                        </a>
                    </div>
                    <hr>
                    <button class="btn btn-primary w-100" type="button" data-bs-toggle="collapse" data-bs-target="#navCollapse" aria-expanded="false" aria-controls="navCollapse">
                        Menu
                    </button>
                    <div class="collapse mt-3" id="navCollapse">
                        <ul class="list-unstyled mb-0">
                            <li>
                                <a href="/user/profile" class="text-decoration-none text-primary d-block py-2">
                                    <button class="btn btn-secondary w-100">Profile</button>
                                </a>
                            </li>
                            <li>
                                <a href="/user/address" class="text-decoration-none text-dark d-block py-2">
                                    <button class="btn btn-primary w-100">Address</button>
                                </a>
                            </li>
                            <li>
                                <a href="/user/orders" class="text-decoration-none text-dark d-block py-2">
                                    <button class="btn btn-secondary w-100">My Orders</button>
                                </a>
                            </li>
                            <li>
                                <a href="/user/getWishlist" class="text-decoration-none text-dark d-block py-2">
                                    <button class="btn btn-secondary w-100">My Wishlist</button>
                                </a>
                            </li>
                            <li>
                                <a href="/user/wallethistory" class="text-decoration-none text-dark d-block py-2">
                                    <button class="btn btn-secondary w-100">Wallet History</button>
                                </a>
                            </li>
                            <li>
                                <a href="/user/forgot" class="text-decoration-none text-dark d-block py-2">
                                    <button class="btn btn-secondary w-100">Change Password</button>
                                </a>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>

            <!-- Main Content -->
            <div class="col-lg-9 px-3">
                <div class="row">
                    <div class="col-md-12 nav-panel p-0">
                        <nav class="nav nav-tabs" id="v-pills-tab" role="tablist">
                            <a class="nav-link active px-5 mx-2" id="v-pills-tab1-tab" data-bs-toggle="pill" href="#v-pills-tab1" role="tab" aria-controls="v-pills-tab1" aria-selected="true">
                                Add Address</a>
                            <a class="nav-link px-5 mx-2" id="v-pills-tab2-tab" data-bs-toggle="pill" href="#v-pills-tab2" role="tab" aria-controls="v-pills-tab2" aria-selected="false">View Address</a>
                          
                        </nav>
                    </div>
                    <div class="col-md-12">
                        <div class="tab-content" id="v-pills-tabContent">
                            <!-- Add Address Tab -->
                            <div class="tab-pane fade show active" id="v-pills-tab1" role="tabpanel" aria-labelledby="v-pills-tab1-tab">
                                <h3 class="mt-5 text-center">Add Address</h3>
                                <form class="my-5" id="addAddressForm">
                                    <!-- User ID input (hidden) -->
                                    <div data-mdb-input-init class="form-outline mb-4">
                                        <input type="hidden" id="formUserId" name="user" class="form-control" />
                                    </div>

                                    <!-- Name input -->
                                    <div data-mdb-input-init class="form-outline mb-4">
                                        <input type="text" id="formName" name="name" class="form-control" required />
                                        <label class="form-label" for="formName">Name</label>
                                    </div>

                                    <!-- Mobile Number input -->
                                    <div data-mdb-input-init class="form-outline mb-4">
                                        <input type="text" id="formMobileNumber" name="mobileNumber" class="form-control" required />
                                        <label class="form-label" for="formMobileNumber">Mobile Number</label>
                                    </div>

                                    <!-- Pincode input -->
                                    <div data-mdb-input-init class="form-outline mb-4">
                                        <input type="text" id="formPincode" name="pincode" class="form-control" required />
                                        <label class="form-label" for="formPincode">Pincode</label>
                                    </div>

                                    <!-- Locality input -->
                                    <div data-mdb-input-init class="form-outline mb-4">
                                        <input type="text" id="formLocality" name="locality" class="form-control" required />
                                        <label class="form-label" for="formLocality">Locality</label>
                                    </div>

                                    <!-- Address input -->
                                    <div data-mdb-input-init class="form-outline mb-4">
                                        <input type="text" id="formAddress" name="address" class="form-control" required />
                                        <label class="form-label" for="formAddress">Address</label>
                                    </div>

                                    <!-- District input -->
                                    <div data-mdb-input-init class="form-outline mb-4">
                                        <input type="text" id="formDistrict" name="district" class="form-control" required />
                                        <label class="form-label" for="formDistrict">District</label>
                                    </div>

                                    <!-- State input -->
                                    <div data-mdb-input-init class="form-outline mb-4">
                                        <input type="text" id="formState" name="state" class="form-control" required />
                                        <label class="form-label" for="formState">State</label>
                                    </div>

                                    <!-- Landmark input -->
                                    <div data-mdb-input-init class="form-outline mb-4">
                                        <input type="text" id="formLandmark" name="landmark" class="form-control" />
                                        <label class="form-label" for="formLandmark">Landmark</label>
                                    </div>

                                    <!-- Alternate Mobile Number input -->
                                    <div data-mdb-input-init class="form-outline mb-4">
                                        <input type="text" id="formAlternateMobile" name="alternateMobile" class="form-control" />
                                        <label class="form-label" for="formAlternateMobile">Alternate Mobile Number</label>
                                    </div>

                                    <!-- Submit button -->
                                    <button data-mdb-ripple-init type="submit" class="btn btn-primary btn-block mb-4">Add Address</button>
                                </form>
                            </div>

                            <!-- View Address Tab -->
                            <div class="tab-pane fade" id="v-pills-tab2" role="tabpanel" aria-labelledby="v-pills-tab2-tab">
                                <% vilasam.forEach(address => { %>
                                    <div class="address-card">
                                        <h3><%= address.name %></h3>
                                        <p><%= address.address %>, <%= address.locality %>, <%= address.district %>, <%= address.state %>, <%= address.pincode %></p>
                                        <p><i class="fas fa-phone"></i> <%= address.mobileNumber %></p>
                                        <div class="d-flex justify-content-end">
                                            <!-- Edit Button -->
                                            <a href="/user/getAddress/<%= address.id %>" class="btn btn-outline-info me-2 edit-button">
                                                <i class="bi bi-pencil-square"></i> Edit
                                            </a>
                                            <!-- Delete Button -->
                                            <button class="btn btn-outline-danger delete" data-id="<%= address.id %>">
                                                <i class="bi bi-trash3"></i> Delete
                                            </button>
                                        </div>
                                    </div>
                                <% }) %>
                            </div>
                           

                          
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<script>
    // Add Address Form Submission
    document.getElementById('addAddressForm').addEventListener('submit', async (event) => {
        event.preventDefault();

        const formData = new FormData(event.target);
        const data = Object.fromEntries(formData.entries());

        try {
            const response = await fetch('/user/addAddress', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(data),
            });

            if (response.ok) {
                Swal.fire({
                    title: 'Success!',
                    text: 'Address added successfully',
                    icon: 'success',
                    confirmButtonText: 'OK',
                }).then(() => {
                    window.location.reload(); // Reload to reflect changes
                });
            } else {
                const errorData = await response.json();
                Swal.fire({
                    title: 'Error!',
                    text: errorData.message || 'Failed to add address',
                    icon: 'error',
                    confirmButtonText: 'OK',
                });
            }
        } catch (error) {
            console.error('Error:', error);
            Swal.fire({
                title: 'Error!',
                text: 'An error occurred while adding the address',
                icon: 'error',
                confirmButtonText: 'OK',
            });
        }
    });

    // Delete Address Functionality
    const deleteButtons = document.querySelectorAll(".delete");
    deleteButtons.forEach(function (button) {
        button.addEventListener("click", function () {
            const addressId = this.getAttribute("data-id");

            Swal.fire({
                title: "Are you sure?",
                text: "You won't be able to revert this!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: "Yes, delete it!"
            }).then((result) => {
                if (result.isConfirmed) {
                    fetch(`/user/deleteAddress/${addressId}`, {
                        method: "DELETE"
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            switch (data.message) {
                                case 'success':
                                    Swal.fire({
                                        title: "Deleted!",
                                        text: "Your address has been deleted.",
                                        icon: "success"
                                    }).then(() => {
                                        window.location.reload();
                                    });
                                    break;
                                case 'nouser':
                                    Swal.fire({
                                        title: "Failed!",
                                        text: "No user found. Please log in.",
                                        icon: "error"
                                    }).then(() => {
                                        window.location.href = '/user/login?msg=loggin'; // Corrected syntax
                                    });
                                    break;
                                default:
                                    Swal.fire({
                                        title: "Failed!",
                                        text: "Address cannot be deleted.",
                                        icon: "error"
                                    });
                            }
                        } else {
                            Swal.fire({
                                title: "Failed!",
                                text: "Address cannot be deleted.",
                                icon: "error"
                            });
                        }
                    })
                    .catch(error => {
                        console.error("Error:", error);
                        Swal.fire({
                            title: "Error!",
                            text: "An error occurred while deleting the address.",
                            icon: "error"
                        });
                    });
                }
            });
        });
    });

    
</script>

<%- include('../../partials/footer') %>