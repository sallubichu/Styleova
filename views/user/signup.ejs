<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.6.0/dist/sweetalert2.all.min.js"></script>
  <!-- Add Google Identity Services Library -->
  <script src="https://accounts.google.com/gsi/client" async defer></script>
  <title>Styleova</title>
  <style>
    .carousel-inner img {
      width: 100%;
      height: auto;
      object-fit: cover;
    }

    a {
      text-decoration: none;
      color: white;
    }

    .password-mismatch {
      border-color: red;
    }

    /* Style for Google Sign-In Button */
    #google-signup-button {
      margin-top: 20px;
      width: 100%;
      text-align: center;
    }
  </style>
  <link rel="icon" type="image/x-icon" href="/public/img/icon.jpg">
</head>

<body>

  <!-- nav -->
  <header>
    <nav class="navbar navbar-expand-lg bg-body-tertiary">
      <div class="container-fluid">
        <a class="navbar-brand" href="#">
          <em>
            <h2><i class="bi bi-gem pe-2"></i>STYLEOVA</h2>
          </em>
        </a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNavDropdown"
          aria-controls="navbarNavDropdown" aria-expanded="false" aria-label="Toggle navigation">
          <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse justify-content-end" id="navbarNavDropdown">
          <ul class="navbar-nav">
            <li class="nav-item">
              <a class="nav-link active" aria-current="page" href="/"><i class="bi bi-house"></i> Home</a>
            </li>
          </ul>
        </div>
      </div>
    </nav>
  </header>

  <!-- main -->
  <main>
    <div class="container">
      <section class="h-100">
        <div class="container py-5 h-100">
          <div class="row d-flex justify-content-center align-items-center h-100">
            <div class="col">
              <div class="card card-registration my-4">
                <div class="row g-0">
                  <div class="col-xl-6 d-none d-xl-block">
                    <img src="https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-registration/img4.webp"
                      alt="Sample photo" class="img-fluid"
                      style="border-top-left-radius: .25rem; border-bottom-left-radius: .25rem;" />
                  </div>
                  <div class="col-xl-6">
                    <div class="card-body p-md-5 text-black">
                      <form id="signUpForm">
                        <h3 class="mb-5 text-uppercase" id="heading">Sign Up!</h3>
                        <% if (errorMessage) { %>
                          <div class="alert alert-danger"><%= errorMessage %></div>
                        <% } %>
                        <div class="row">
                          <div class="col-md-12 mb-6">
                            <div class="form-outline">
                              <input type="text" id="name" class="form-control form-control-lg" name="name" required />
                              <label class="form-label" for="name">First name</label>
                            </div>
                          </div>
                        </div>
                        <div class="row">
                          <div class="col-md-12 mb-6">
                            <div class="form-outline">
                              <input type="email" id="email" class="form-control form-control-lg" name="email" required />
                              <label class="form-label" for="email">Email</label>
                            </div>
                          </div>
                        </div>
                        <div class="form-outline mb-4">
                          <input type="password" id="password" class="form-control form-control-lg" name="password" required />
                          <label class="form-label" for="password">Password</label>
                        </div>
                        <div class="form-outline mb-4">
                          <input type="password" id="confirmPassword" class="form-control form-control-lg" name="confirmPassword" required />
                          <label class="form-label" for="confirmPassword">Confirm Password</label>
                          <small id="passwordError" class="text-danger" style="display: none;">Passwords do not match.</small>
                        </div>
                        <div class="d-flex justify-content-end pt-3">
                          <button type="button" id="sendOtpButton" class="btn btn-warning btn-lg ms-2">Send OTP</button>
                        </div>
                        <div id="otpDiv"></div>
                        <button type="button" id="registerButton" class="btn btn-primary btn-lg mt-3">Register</button>
                        <!-- Resend OTP Button -->
                        <button type="button" id="resendOtpButton" class="btn btn-secondary btn-lg mt-3" style="display: none;">Resend OTP</button>
                      </form>
                      <!-- Google Sign-Up Button -->
                      <div id="google-signup-button"></div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </section>
    </div>
  </main>

  <!-- scripts -->
  <script>
    async function sendOtp() {
      const email = document.getElementById('email').value.trim();
      const name = document.getElementById('name').value.trim();
      const password = document.getElementById('password').value.trim();
      const confirmPassword = document.getElementById('confirmPassword').value.trim();

      if (!email || !name || !password || !confirmPassword) {
        Swal.fire('Error: Please fill in all fields.');
        return;
      }

      if (password !== confirmPassword) {
        Swal.fire('Error: Passwords do not match.');
        return;
      }

      try {
        const response = await fetch('/user/sendOtp', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ email, password, name }),
        });
        const data = await response.json();

        if (response.ok) {
          Swal.fire('OTP sent successfully. Valid for 5 minutes.');
          document.getElementById('otpDiv').innerHTML = `
            <div class="form-outline my-4">
              <input type="text" id="otpInput" class="form-control form-control-lg" name="otp" required />
              <label class="form-label" for="otpInput">Enter OTP</label>
            </div>
          `;
          // Disable the "Send OTP" button after it's clicked
          document.getElementById('sendOtpButton').disabled = true;
          document.getElementById('name').disabled = true;
      document.getElementById('email').disabled = true;
      document.getElementById('password').disabled = true;
      document.getElementById('confirmPassword').disabled = true;
         
          document.getElementById('resendOtpButton').style.display = 'block'; // Show Resend OTP button
        } else {
          Swal.fire('Warning: ' + (data.message || 'Something went wrong.'));
        }
      } catch (error) {
        Swal.fire('Error: Unable to send OTP.');
      }
    }

    // Function to handle OTP resend
    async function resendOtp() {
      const email = document.getElementById('email').value;
      try {
        const response = await fetch('/user/resendOtp', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ email }),
        });
        const data = await response.json();

        if (response.ok) {
          Swal.fire('OTP resent successfully. Valid for 5 minutes.');
        } else {
          Swal.fire('Error: ' + (data.message || 'Something went wrong.'));
        }
      } catch (error) {
        Swal.fire('Error: Unable to resend OTP.');
      }
    }

    async function verifyOtpAndRegister() {
      const otp = document.getElementById('otpInput').value;
      const email = document.getElementById('email').value;
      const name = document.getElementById('name').value;
      const password = document.getElementById('password').value;
      const confirmPassword = document.getElementById('confirmPassword').value;

      if (!email || !otp || !name || !password || !confirmPassword) {
        Swal.fire('Error: Please fill in all fields.');
        return;
      }

      if (password !== confirmPassword) {
        Swal.fire('Error: Passwords do not match.');
        return;
      }

      try {
        const response = await fetch('/user/verifyOtp', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ email, otp, name, password }),
        });

        const data = await response.json();

        if (response.ok) {
          Swal.fire('Registration successful!', '', 'success').then(() => {
            // Redirect to the login page after successful registration
            window.location.href = data.redirectUrl || '/user/login';
          });
        } else {
          Swal.fire('Error: ' + (data.message || 'Something went wrong.'));
        }
      } catch (error) {
        Swal.fire('Error: Unable to verify OTP.');
      }
    }

    // Password matching validation
    document.getElementById('confirmPassword').addEventListener('input', function () {
      const password = document.getElementById('password').value;
      const confirmPassword = this.value;
      const passwordError = document.getElementById('passwordError');

      if (password !== confirmPassword) {
        this.classList.add('password-mismatch');
        passwordError.style.display = 'block';
      } else {
        this.classList.remove('password-mismatch');
        passwordError.style.display = 'none';
      }
    });

    document.getElementById('sendOtpButton').addEventListener('click', sendOtp);
    document.getElementById('registerButton').addEventListener('click', verifyOtpAndRegister);
    document.getElementById('resendOtpButton').addEventListener('click', resendOtp);

    // Google Sign-Up Integration
    function handleGoogleSignUp(response) {
    const { credential } = response;
    
    // Decode Google JWT token (optional but recommended)
    const userData = jwt_decode(credential);
    console.log("Google User Data:", userData); // Check user details in console

    fetch('/user/google-signup', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ credential }),
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            Swal.fire('Google Sign-Up Successful!', '', 'success').then(() => {
                window.location.href = data.redirectUrl || '/user/dashboard';
            });
        } else {
            Swal.fire('Error: ' + (data.message || 'Google Sign-Up failed.'));
        }
    })
    .catch(error => {
        Swal.fire('Error: Unable to process Google Sign-Up.');
    });
}
  </script>
</body>

</html>