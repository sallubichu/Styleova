<%- include('../partials/adminHeader') %>

<div class="admin-container">
  <!-- Sidebar -->
  <aside class="sidebar">
    <h3 class="logo">Admin Panel</h3>
    <ul class="nav">
      <li>
        <a href="/admin/dashboard"
          ><i class="bi bi-speedometer2"></i> Dashboard</a
        >
      </li>
      <li>
        <a href="/admin/category"><i class="bi bi-tags"></i> Categories</a>
      </li>
      <li>
        <a href="/admin/products"><i class="bi bi-box-seam"></i> Products</a>
      </li>
      <li>
        <a href="/admin/users"><i class="bi bi-people"></i> Manage Users</a>
      </li>
      <li>
        <a href="/admin/manageOrders"
          ><i class="bi bi-cart-check"></i> Orders</a
        >
      </li>
      <li>
        <a href="/admin/offers"><i class="bi bi-percent"></i> Manage Offers</a>
      </li>
      <li>
        <a href="/admin/coupons" class="active"
          ><i class="bi bi-ticket-perforated"></i> Coupons</a
        >
      </li>
    </ul>
    <li>
      <a href="/admin/logout" class="logout"
        ><i class="bi bi-box-arrow-right"></i> Logout</a
      >
    </li>
  </aside>

  <!-- Main Content -->
  <main class="content">
    <div class="header d-flex justify-content-between align-items-center">
      <h3>Manage Coupons</h3>
      <button
        class="btn btn-primary"
        data-bs-toggle="modal"
        data-bs-target="#addCouponModal"
      >
        <i class="bi bi-plus"></i> Add Coupon
      </button>
    </div>

    <!-- Coupons Table -->
    <div class="table-container">
      <table class="user-table">
        <thead>
          <tr>
            <th>Coupon Code</th>
            <th>Discount Type</th>
            <th>Discount Value</th>
            <th>Start Date</th>
            <th>End Date</th>
            <th>Status</th>
            <th>Actions</th>
          </tr>
        </thead>
        <tbody>
          <% coupons.forEach(coupon => { %>
          <tr>
            <td><%= coupon.code %></td>
            <td><%= coupon.discountType %></td>
            <td><%= coupon.discountValue %></td>
            <td><%= new Date(coupon.startDate).toLocaleDateString() %></td>
            <td><%= new Date(coupon.endDate).toLocaleDateString() %></td>
            <td>
              <% if (coupon.status === "Active") { %>
              <span class="text-success">Active</span>
              <% } else { %>
              <span class="text-danger">Inactive</span>
              <% } %>
            </td>
            <td>
              <button
                class="btn btn-warning btn-sm edit-coupon"
                data-id="<%= coupon._id %>"
                data-code="<%= coupon.code %>"
                data-discounttype="<%= coupon.discountType %>"
                data-discountvalue="<%= coupon.discountValue %>"
                data-startdate="<%= new Date(coupon.startDate).toISOString().split('T')[0] %>"
                data-enddate="<%= new Date(coupon.endDate).toISOString().split('T')[0] %>"
                data-status="<%= coupon.status %>"
              >
                Edit
              </button>
              <button
                class="btn btn-danger btn-sm delete-coupon"
                data-id="<%= coupon._id %>"
              >
                Delete
              </button>
            </td>
          </tr>
          <% }) %>
        </tbody>
      </table>
    </div>
  </main>
</div>

<!-- Add Coupon Modal -->
<div
  class="modal fade"
  id="addCouponModal"
  tabindex="-1"
  aria-labelledby="addCouponModalLabel"
  aria-hidden="true"
>
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="addCouponModalLabel">Add New Coupon</h5>
        <button
          type="button"
          class="btn-close"
          data-bs-dismiss="modal"
          aria-label="Close"
        ></button>
      </div>
      <div class="modal-body">
        <form id="addCouponForm">
          <div class="mb-3">
            <label for="couponCode" class="form-label">Coupon Code</label>
            <input type="text" class="form-control" id="couponCode" required />
          </div>
          <div class="mb-3">
            <label for="discountType" class="form-label">Discount Type</label>
            <select class="form-select" id="discountType" required>
              <option value="Percentage">Percentage</option>
              <option value="Fixed">Fixed Amount</option>
            </select>
          </div>
          <div class="mb-3">
            <label for="discountValue" class="form-label">Discount Value</label>
            <input
              type="number"
              class="form-control"
              id="discountValue"
              required
            />
          </div>
          <div class="mb-3">
            <label for="startDate" class="form-label">Start Date</label>
            <input type="date" class="form-control" id="startDate" required />
          </div>
          <div class="mb-3">
            <label for="endDate" class="form-label">End Date</label>
            <input type="date" class="form-control" id="endDate" required />
          </div>
          <div class="mb-3">
            <label for="status" class="form-label">Status</label>
            <select class="form-select" id="status" required>
              <option value="Active">Active</option>
              <option value="Inactive">Inactive</option>
            </select>
          </div>
          <button type="submit" class="btn btn-primary">Save Coupon</button>
        </form>
      </div>
    </div>
  </div>
</div>

<!-- Edit Coupon Modal -->
<div
  class="modal fade"
  id="editCouponModal"
  tabindex="-1"
  aria-labelledby="editCouponModalLabel"
  aria-hidden="true"
>
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="editCouponModalLabel">Edit Coupon</h5>
        <button
          type="button"
          class="btn-close"
          data-bs-dismiss="modal"
          aria-label="Close"
        ></button>
      </div>
      <div class="modal-body">
        <form id="updateCouponForm">
          <!-- Hidden input to store coupon ID -->
          <input type="hidden" id="couponId" name="couponId" />

          <div class="mb-3">
            <label for="couponCode" class="form-label">Coupon Code</label>
            <input
              type="text"
              class="form-control"
              id="couponCode"
              name="code"
              required
            />
          </div>

          <div class="mb-3">
            <label for="discountType" class="form-label">Discount Type</label>
            <select
              class="form-control"
              id="discountType"
              name="discountType"
              required
            >
              <option value="percentage">Percentage</option>
              <option value="fixed">Fixed Amount</option>
            </select>
          </div>

          <div class="mb-3">
            <label for="discountValue" class="form-label">Discount Value</label>
            <input
              type="number"
              class="form-control"
              id="discountValue"
              name="discountValue"
              required
            />
          </div>

          <div class="mb-3">
            <label for="startDate" class="form-label">Start Date</label>
            <input
              type="date"
              class="form-control"
              id="startDate"
              name="startDate"
              required
            />
          </div>

          <div class="mb-3">
            <label for="endDate" class="form-label">End Date</label>
            <input
              type="date"
              class="form-control"
              id="endDate"
              name="endDate"
              required
            />
          </div>

          <div class="mb-3">
            <label for="status" class="form-label">Status</label>
            <select class="form-control" id="status" name="status" required>
              <option value="active">Active</option>
              <option value="inactive">Inactive</option>
            </select>
          </div>

          <div class="modal-footer">
            <button
              type="button"
              class="btn btn-secondary"
              data-bs-dismiss="modal"
            >
              Close
            </button>
            <button type="submit" class="btn btn-primary">Update Coupon</button>
          </div>
        </form>
      </div>
    </div>
  </div>
</div>
<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
<script>
  // Add Coupon Form Submission
  document
    .getElementById("addCouponForm")
    .addEventListener("submit", async (e) => {
      e.preventDefault();

      const formData = {
        code: document.getElementById("couponCode").value,
        discountType: document.getElementById("discountType").value,
        discountValue: document.getElementById("discountValue").value,
        startDate: document.getElementById("startDate").value,
        endDate: document.getElementById("endDate").value,
        status: document.getElementById("status").value,
      };

      try {
        const response = await fetch("/admin/addCoupon", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify(formData),
        });

        const data = await response.json();

        if (data.success) {
          Swal.fire({
            icon: "success",
            title: "Coupon Added",
            text: "The coupon has been successfully added.",
            confirmButtonText: "OK",
          }).then(() => {
            window.location.reload();
          });
        } else {
          Swal.fire({
            icon: "error",
            title: "Error",
            text: data.message || "An error occurred. Please try again.",
            confirmButtonText: "OK",
          });
        }
      } catch (error) {
        console.error("Error:", error);
        Swal.fire({
          icon: "error",
          title: "Error",
          text: "An error occurred. Please try again.",
          confirmButtonText: "OK",
        });
      }
    });

  // Delete Coupon
  document.querySelectorAll(".delete-coupon").forEach((button) => {
    button.addEventListener("click", async (e) => {
      const couponId = e.target.getAttribute("data-id");

      Swal.fire({
        title: "Are you sure?",
        text: "You won't be able to revert this!",
        icon: "warning",
        showCancelButton: true,
        confirmButtonColor: "#3085d6",
        cancelButtonColor: "#d33",
        confirmButtonText: "Yes, delete it!",
      }).then(async (result) => {
        if (result.isConfirmed) {
          try {
            const response = await fetch(`/admin/deleteCoupon/${couponId}`, {
              method: "DELETE",
              headers: { "Content-Type": "application/json" },
            });

            const data = await response.json();

            if (data.success) {
              Swal.fire({
                icon: "success",
                title: "Coupon Deleted",
                text: data.message,
                confirmButtonText: "OK",
              }).then(() => {
                window.location.reload(); // Reload to update UI
              });
            } else {
              Swal.fire({
                icon: "error",
                title: "Error",
                text: data.message || "An error occurred. Please try again.",
                confirmButtonText: "OK",
              });
            }
          } catch (error) {
            Swal.fire({
              icon: "error",
              title: "Error",
              text: "An error occurred. Please try again later.",
              confirmButtonText: "OK",
            });
          }
        }
      });
    });
  });

  document.addEventListener("DOMContentLoaded", () => {
    // Select all edit buttons
    document.querySelectorAll(".edit-coupon").forEach((button) => {
      button.addEventListener("click", function () {
        console.log("Edit button clicked!"); // Debugging

        // Get coupon data from the button attributes
        const couponId = this.getAttribute("data-id");
        const code = this.getAttribute("data-code");
        const discountType = this.getAttribute("data-discounttype");
        const discountValue = this.getAttribute("data-discountvalue");
        const startDate = this.getAttribute("data-startdate");
        const endDate = this.getAttribute("data-enddate");
        const status = this.getAttribute("data-status");

        console.log("Coupon Data:", {
          couponId,
          code,
          discountType,
          discountValue,
          startDate,
          endDate,
          status,
        }); // Debugging

        // Populate the modal form fields
        document.getElementById("couponId").value = couponId;
        document.getElementById("couponCode").value = code;
        document.getElementById("discountType").value = discountType;
        document.getElementById("discountValue").value = discountValue;
        document.getElementById("startDate").value = startDate;
        document.getElementById("endDate").value = endDate;
        document.getElementById("status").value = status;

        // Open the modal
        const editModal = new bootstrap.Modal(
          document.getElementById("editCouponModal")
        );
        editModal.show();
      });
    });

    // Handle form submission
    document
      .getElementById("updateCouponForm")
      .addEventListener("submit", async function (event) {
        event.preventDefault();

        const couponId = document.getElementById("couponId").value;
        const formData = {
          code: document.getElementById("couponCode").value,
          discountType: document.getElementById("discountType").value,
          discountValue: document.getElementById("discountValue").value,
          startDate: document.getElementById("startDate").value,
          endDate: document.getElementById("endDate").value,
          status: document.getElementById("status").value,
        };

        try {
          const response = await fetch(`/admin/updateCoupon/${couponId}`, {
            method: "PUT",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify(formData),
          });

          const result = await response.json();
          if (response.ok) {
            alert("Coupon updated successfully!");
            location.reload();
          } else {
            alert(result.message || "Failed to update coupon");
          }
        } catch (error) {
          console.error("Error updating coupon:", error);
          alert("An error occurred while updating the coupon");
        }
      });
  });
</script>

<%- include('../partials/footer') %>

<!-- Custom Styles -->
<style>
  .admin-container {
    display: flex;
    height: 100vh;
    background: #f5f5f5;
  }
  .sidebar {
    width: 250px;
    background: #2c3e50;
    color: white;
    padding: 20px;
    display: flex;
    flex-direction: column;
  }
  .sidebar .logo {
    text-align: center;
    font-size: 22px;
    font-weight: bold;
    margin-bottom: 30px;
  }
  .nav {
    list-style: none;
    padding: 0;
  }
  .nav li {
    margin: 10px 0;
  }
  .nav a {
    color: white;
    text-decoration: none;
    font-size: 16px;
    display: flex;
    align-items: center;
    padding: 12px;
    border-radius: 5px;
    transition: 0.3s;
  }
  .nav a i {
    margin-right: 10px;
    font-size: 20px;
  }
  .nav a:hover,
  .nav a.active {
    background: rgba(255, 255, 255, 0.2);
  }
  .content {
    flex-grow: 1;
    padding: 40px;
  }
  .header {
    display: flex;
    justify-content: space-between;
    align-items: center;
  }
  .header h3 {
    color: #2c3e50;
  }
  .table-container {
    background: white;
    padding: 20px;
    border-radius: 10px;
    box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);
  }
  .user-table {
    width: 100%;
    border-collapse: collapse;
  }
  .user-table th,
  .user-table td {
    padding: 12px;
    text-align: left;
    border-bottom: 1px solid #ddd;
  }
  .user-table th {
    background: #2c3e50;
    color: white;
  }
  .text-success {
    color: #28a745;
  }
  .text-danger {
    color: #dc3545;
  }
  .btn {
    padding: 8px 12px;
    border-radius: 5px;
    font-size: 14px;
  }
  .btn-primary {
    background: #007bff;
    border: none;
  }
  .btn-danger {
    background: #dc3545;
    border: none;
  }
  .btn-sm {
    padding: 5px 10px;
    font-size: 12px;
  }
</style>
