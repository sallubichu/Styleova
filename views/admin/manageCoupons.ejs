<%- include('../partials/adminHeader') %>

<div class="admin-container">
  <!-- Sidebar -->
  <aside class="sidebar">
    <h3 class="logo">Admin Panel</h3>
    <ul class="nav">
      <li>
        <a href="/admin/dashboard"><i class="bi bi-speedometer2"></i> Dashboard</a>
      </li>
      <li>
        <a href="/admin/category"><i class="bi bi-tags"></i> Categories</a>
      </li>
      <li>
        <a href="/admin/products"><i class="bi bi-box-seam"></i> Products</a>
      </li>
      <li>
        <a href="/admin/users"><i class="bi bi-people"></i> Manage Users</a>
      </li>
      <li>
        <a href="/admin/manageOrders"><i class="bi bi-cart-check"></i> Orders</a>
      </li>
      <li>
        <a href="/admin/getOffers"><i class="bi bi-percent"></i> Manage Offers</a>
      </li>
      <li>
        <a href="/admin/salesManagement" class="active"><i class="bi bi-bar-chart-line"></i> Sales Management</a>
      </li>
      <li>
        <a href="/admin/getCoupons" class="active"><i class="bi bi-ticket-perforated"></i> Coupons</a>
      </li>
    </ul>
    <li>
      <a href="/admin/logout" class="logout"><i class="bi bi-box-arrow-right"></i> Logout</a>
    </li>
  </aside>

  <!-- Main Content -->
  <main class="content">
    <div class="header d-flex justify-content-between align-items-center">
      <h3>Manage Coupons</h3>
      <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addCouponModal">
        <i class="bi bi-plus"></i> Add Coupon
      </button>
    </div>

    <!-- Coupons Table -->
    <div class="table-container">
      <table class="user-table">
        <thead>
          <tr>
            <th>Coupon Code</th>
            <th>Discount Type</th>
            <th>Discount Value</th>
            <th>Start Date</th>
            <th>End Date</th>
            <th>Status</th>
            <th>Actions</th>
          </tr>
        </thead>
        <tbody>
          <% coupons.forEach(coupon => { %>
          <tr>
            <td><%= coupon.code %></td>
            <td><%= coupon.discountType %></td>
            <td><%= coupon.discountValue %></td>
            <td><%= new Date(coupon.startDate).toLocaleDateString() %></td>
            <td><%= new Date(coupon.endDate).toLocaleDateString() %></td>
            <td>
              <% if (coupon.status === "Active") { %>
              <span class="text-success">Active</span>
              <% } else { %>
              <span class="text-danger">Inactive</span>
              <% } %>
            </td>
            <td>
              <button
                class="btn btn-warning btn-sm edit-coupon"
                data-id="<%= coupon._id %>"
                data-code="<%= coupon.code %>"
                data-discounttype="<%= coupon.discountType %>"
                data-discountvalue="<%= coupon.discountValue %>"
                data-startdate="<%= new Date(coupon.startDate).toISOString().split('T')[0] %>"
                data-enddate="<%= new Date(coupon.endDate).toISOString().split('T')[0] %>"
                data-status="<%= coupon.status %>"
                data-bs-toggle="modal"
                data-bs-target="#editCouponModal"
              >
                Edit
              </button>
              <button
                class="btn btn-danger btn-sm delete-coupon"
                data-id="<%= coupon._id %>"
              >
                Delete
              </button>
            </td>
          </tr>
          <% }) %>
        </tbody>
      </table>

      <!-- Pagination Controls -->
      <div class="pagination mt-4">
        <% if (pagination.currentPage > 1) { %>
        <a href="/admin/getCoupons?page=<%= pagination.currentPage - 1 %>&limit=<%= pagination.limit %>" class="btn btn-outline-primary">Previous</a>
        <% } %>

        <% for (let i = 1; i <= pagination.totalPages; i++) { %>
        <a href="/admin/getCoupons?page=<%= i %>&limit=<%= pagination.limit %>"
          class="btn <%= pagination.currentPage === i ? 'btn-primary' : 'btn-outline-primary' %>">
          <%= i %>
        </a>
        <% } %>

        <% if (pagination.currentPage < pagination.totalPages) { %>
        <a href="/admin/getCoupons?page=<%= pagination.currentPage + 1 %>&limit=<%= pagination.limit %>" class="btn btn-outline-primary">Next</a>
        <% } %>
      </div>
    </div>
  </main>
</div>

<!-- Add Coupon Modal -->
<div class="modal fade" id="addCouponModal" tabindex="-1" aria-labelledby="addCouponModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="addCouponModalLabel">Add New Coupon</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <form id="addCouponForm">
          <div class="mb-3">
            <label for="couponCode" class="form-label">Coupon Code</label>
            <input type="text" class="form-control" id="couponCode" required />
          </div>
          <div class="mb-3">
            <label for="discountType" class="form-label">Discount Type</label>
            <select class="form-select" id="discountType" required>
              <option value="Percentage">Percentage</option>
              <option value="Fixed">Fixed Amount</option>
            </select>
          </div>
          <div class="mb-3">
            <label for="discountValue" class="form-label">Discount Value</label>
            <input type="number" class="form-control" id="discountValue" required />
          </div>
          <div class="mb-3">
            <label for="startDate" class="form-label">Start Date</label>
            <input type="date" class="form-control" id="startDate" required />
          </div>
          <div class="mb-3">
            <label for="endDate" class="form-label">End Date</label>
            <input type="date" class="form-control" id="endDate" required />
          </div>
          <div class="mb-3">
            <label for="status" class="form-label">Status</label>
            <select class="form-select" id="status" required>
              <option value="Active">Active</option>
              <option value="Inactive">Inactive</option>
            </select>
          </div>
          <button type="submit" class="btn btn-primary">Save Coupon</button>
        </form>
      </div>
    </div>
  </div>
</div>

<!-- Edit Coupon Modal -->
<div class="modal fade" id="editCouponModal" tabindex="-1" aria-labelledby="editCouponModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="editCouponModalLabel">Edit Coupon</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <form id="updateCouponForm">
          <input type="hidden" id="couponId" name="couponId" />

          <div class="mb-3">
            <label for="editCouponCode" class="form-label">Coupon Code</label>
            <input type="text" class="form-control" id="editCouponCode" name="code" required />
          </div>

          <div class="mb-3">
            <label for="editDiscountType" class="form-label">Discount Type</label>
            <select class="form-control" id="editDiscountType" name="discountType" required>
              <option value="Percentage">Percentage</option>
              <option value="Fixed">Fixed Amount</option>
            </select>
          </div>

          <div class="mb-3">
            <label for="editDiscountValue" class="form-label">Discount Value</label>
            <input type="number" class="form-control" id="editDiscountValue" name="discountValue" required />
          </div>

          <div class="mb-3">
            <label for="editStartDate" class="form-label">Start Date</label>
            <input type="date" class="form-control" id="editStartDate" name="startDate" required />
          </div>

          <div class="mb-3">
            <label for="editEndDate" class="form-label">End Date</label>
            <input type="date" class="form-control" id="editEndDate" name="endDate" required />
          </div>

          <div class="mb-3">
            <label for="editStatus" class="form-label">Status</label>
            <select class="form-control" id="editStatus" name="status" required>
              <option value="Active">Active</option>
              <option value="Inactive">Inactive</option>
            </select>
          </div>

          <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            <button type="submit" class="btn btn-primary">Update Coupon</button>
          </div>
        </form>
      </div>
    </div>
  </div>
</div>

<!-- Include Axios for HTTP requests -->
<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>

<!-- Include SweetAlert for alerts -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<!-- Custom Script -->
<script>
  document.addEventListener("DOMContentLoaded", function () {
    // Add Coupon
    document.getElementById("addCouponForm").addEventListener("submit", async (e) => {
      e.preventDefault();

      const formData = {
        code: document.getElementById("couponCode").value,
        discountType: document.getElementById("discountType").value,
        discountValue: document.getElementById("discountValue").value,
        startDate: document.getElementById("startDate").value,
        endDate: document.getElementById("endDate").value,
        status: document.getElementById("status").value,
      };

      try {
        const response = await axios.post("/admin/addCoupon", formData);
        Swal.fire({
          icon: "success",
          title: "Success!",
          text: response.data.message,
          confirmButtonText: "OK",
        }).then(() => {
          setTimeout(() => {
            location.reload(); // Reload after 1 second
          }, 1000);
        });
      } catch (error) {
        Swal.fire({
          icon: "error",
          title: "Error!",
          text: error.response.data.message,
          confirmButtonText: "OK",
        });
      }
    });

    // Edit Coupon - Populate Modal
    document.querySelectorAll(".edit-coupon").forEach((button) => {
      button.addEventListener("click", () => {
        document.getElementById("couponId").value = button.getAttribute("data-id");
        document.getElementById("editCouponCode").value = button.getAttribute("data-code");
        document.getElementById("editDiscountType").value = button.getAttribute("data-discounttype");
        document.getElementById("editDiscountValue").value = button.getAttribute("data-discountvalue");
        document.getElementById("editStartDate").value = button.getAttribute("data-startdate");
        document.getElementById("editEndDate").value = button.getAttribute("data-enddate");
        document.getElementById("editStatus").value = button.getAttribute("data-status");
      });
    });

    // Update Coupon
    document.getElementById("updateCouponForm").addEventListener("submit", async (e) => {
      e.preventDefault();

      const formData = {
        code: document.getElementById("editCouponCode").value,
        discountType: document.getElementById("editDiscountType").value,
        discountValue: document.getElementById("editDiscountValue").value,
        startDate: document.getElementById("editStartDate").value,
        endDate: document.getElementById("editEndDate").value,
        status: document.getElementById("editStatus").value,
      };

      const couponId = document.getElementById("couponId").value;

      try {
        const response = await axios.put(`/admin/updateCoupon/${couponId}`, formData);
        Swal.fire({
          icon: "success",
          title: "Success!",
          text: response.data.message,
          confirmButtonText: "OK",
        }).then(() => {
          setTimeout(() => {
            location.reload(); // Reload after 1 second
          }, 1000);
        });
      } catch (error) {
        Swal.fire({
          icon: "error",
          title: "Error!",
          text: error.response.data.message,
          confirmButtonText: "OK",
        });
      }
    });

    // Delete Coupon with Confirmation
    document.querySelectorAll(".delete-coupon").forEach((button) => {
      button.addEventListener("click", async () => {
        const couponId = button.getAttribute("data-id");

        Swal.fire({
          title: "Are you sure?",
          text: "You won't be able to revert this!",
          icon: "warning",
          showCancelButton: true,
          confirmButtonColor: "#3085d6",
          cancelButtonColor: "#d33",
          confirmButtonText: "Yes, delete it!",
        }).then(async (result) => {
          if (result.isConfirmed) {
            try {
              const response = await axios.delete(`/admin/deleteCoupon/${couponId}`);
              Swal.fire({
                icon: "success",
                title: "Success!",
                text: response.data.message,
                confirmButtonText: "OK",
              }).then(() => {
                setTimeout(() => {
                  location.reload(); // Reload after 1 second
                }, 1000);
              });
            } catch (error) {
              Swal.fire({
                icon: "error",
                title: "Error!",
                text: error.response.data.message,
                confirmButtonText: "OK",
              });
            }
          }
        });
      });
    });
  });
</script>

<%- include('../partials/footer') %>

<!-- Custom Styles -->
<style>
  .admin-container {
    display: flex;
    height: 100vh;
    background: #f5f5f5;
  }
  .sidebar {
    width: 250px;
    background: #2c3e50;
    color: white;
    padding: 20px;
    display: flex;
    flex-direction: column;
  }
  .sidebar .logo {
    text-align: center;
    font-size: 22px;
    font-weight: bold;
    margin-bottom: 30px;
  }
  .nav {
    list-style: none;
    padding: 0;
  }
  .nav li {
    margin: 10px 0;
  }
  .nav a {
    color: white;
    text-decoration: none;
    font-size: 16px;
    display: flex;
    align-items: center;
    padding: 12px;
    border-radius: 5px;
    transition: 0.3s;
  }
  .nav a i {
    margin-right: 10px;
    font-size: 20px;
  }
  .nav a:hover,
  .nav a.active {
    background: rgba(255, 255, 255, 0.2);
  }
  .content {
    flex-grow: 1;
    padding: 40px;
  }
  .header {
    display: flex;
    justify-content: space-between;
    align-items: center;
  }
  .header h3 {
    color: #2c3e50;
  }
  .table-container {
    background: white;
    padding: 20px;
    border-radius: 10px;
    box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);
  }
  .user-table {
    width: 100%;
    border-collapse: collapse;
  }
  .user-table th,
  .user-table td {
    padding: 12px;
    text-align: left;
    border-bottom: 1px solid #ddd;
  }
  .user-table th {
    background: #2c3e50;
    color: white;
  }
  .text-success {
    color: #28a745;
  }
  .text-danger {
    color: #dc3545;
  }
  .btn {
    padding: 8px 12px;
    border-radius: 5px;
    font-size: 14px;
  }
  .btn-primary {
    background: #007bff;
    border: none;
  }
  .btn-danger {
    background: #dc3545;
    border: none;
  }
  .btn-sm {
    padding: 5px 10px;
    font-size: 12px;
  }

  .pagination {
  display: flex;
  justify-content: center;
  gap: 5px;
  margin-top: 20px;
}

.pagination .btn {
  padding: 5px 10px;
  border-radius: 5px;
  text-decoration: none;
}

.pagination .btn-primary {
  background-color: #007bff;
  color: white;
}

.pagination .btn-outline-primary {
  border: 1px solid #007bff;
  color: #007bff;
}

.sidebar .logout {
        margin-top: auto; /* This will push the logout button to the bottom */
        background: #e74c3c; /* Optional: Customize the background color */
        color: white;
        padding: 10px 20px;
        border-radius: 5px;
        text-decoration: none;
        display: flex;
        align-items: center;
        justify-content: center;
        transition: 0.3s;
      }

      .sidebar .logout:hover {
        background: #c0392b; /* Optional: Darken on hover */
      }
</style>
