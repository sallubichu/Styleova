<%- include('../partials/adminHeader') %>

<div class="admin-container">
  <!-- Sidebar -->
  <aside class="sidebar">
    <h3 class="logo">Admin Panel</h3>
    <ul class="nav">
      <li><a href="/admin/dashboard"><i class="bi bi-speedometer2"></i> Dashboard</a></li>
      <li><a href="/admin/category"><i class="bi bi-tags"></i> Categories</a></li>
      <li><a href="/admin/products" class="active"><i class="bi bi-box-seam"></i> Products</a></li>
      <li><a href="/admin/users"><i class="bi bi-people"></i> Manage Users</a></li>
      <li><a href="/admin/manageOrders"><i class="bi bi-cart-check"></i> Orders</a></li>
      <li>
        <a href="/admin/getOffers"><i class="bi bi-percent"></i> Manage Offers</a>
      </li>
      <li>
        <a href="/admin/salesManagement" class="active"
          ><i class="bi bi-bar-chart-line"></i> Sales Report</a
        >
      </li>
      <li>
        <a href="/admin/getCoupons" class="active"
          ><i class="bi bi-ticket-perforated"></i> Coupons</a
        >
      </li>
    </ul>
    <li><a href="/admin/logout" class="logout"><i class="bi bi-box-arrow-right"></i> Logout</a></li>
  </aside>

  <!-- Main Content -->
  <main class="content">
    <div class="header">
      <h2>Manage Products</h2>
      <a href="/admin/addproducts" class="btn btn-primary">Add Product</a>
    </div>

    <!-- Product Table -->
    <div class="table-container">
      <table class="user-table">
        <thead>
          <tr>
            <th>Product</th>
            <th>Category</th>
            <th>Stock Quantity</th>
            <th>Listing</th>
            <th>Actions</th>
          </tr>
        </thead>
        <tbody>
          <% if (!data || data.length === 0) { %>
            <tr>
              <td colspan="5" class="text-center">No products available.</td>
            </tr>
          <% } else { %>
            <% data.forEach(product => { %>
              <tr>
                <td>
                  <div class="d-flex align-items-center">
                    <img src="/<%= product.images[0] ? product.images[0] : 'default.jpg' %>" alt="<%= product.name %> image" class="avatar">
                    <span class="fw-bold"><%= product.name %></span>
                  </div>
                </td>
                <td>
                  <% if (product.category) { %>
                    <span class="badge large-badge text-dark"><%= product.category.name %></span>
                  <% } else { %>
                    <span class="badge bg-warning text-dark">No Category</span>
                  <% } %>
                </td>
                <td>
                  <span class="badge bg-primary">S: <%= product.stock.Small %></span>
                  <span class="badge bg-success">M: <%= product.stock.Medium %></span>
                  <span class="badge bg-warning">L: <%= product.stock.Large %></span>
                </td>
                <td class="text-center">
                  <% if (product.listing) { %>
                    <i class="bi bi-toggle-on text-success toggle-btn" data-id="<%= product._id %>"></i>
                  <% } else { %>
                    <i class="bi bi-toggle-off text-danger toggle-btn" data-id="<%= product._id %>"></i>
                  <% } %>
                </td>
                <td class="text-center">
                  <a href="/admin/editProduct/<%= product._id %>" class="btn btn-sm btn-warning" title="Edit">
                    <i class="fas fa-edit"></i> Edit
                  </a>
                  <button class="btn btn-sm btn-danger delete-btn" data-id="<%= product._id %>" title="Delete">
                    <i class="fas fa-trash"></i> Delete
                  </button>
                  <button class="btn btn-sm btn-info stock-update-btn"
                    data-id="<%= product._id %>"
                    data-stock-small="<%= product.stock.Small %>"
                    data-stock-medium="<%= product.stock.Medium %>"
                    data-stock-large="<%= product.stock.Large %>">
                    <i class="fas fa-box"></i> Update Stock
                  </button>
                </td>
              </tr>
            <% }); %>
          <% } %>
        </tbody>
      </table>
    </div>
  </main>
</div>

<!-- Modal for stock update -->
<div class="modal fade" id="stockUpdateModal" tabindex="-1" aria-labelledby="stockUpdateModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="stockUpdateModalLabel">Update Stock Quantity</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <form id="stockUpdateForm">
          <input type="hidden" id="productId" name="productId">
          <div class="mb-3">
            <label class="form-label">Update Stock for Sizes</label>
            <input type="number" class="form-control mb-2" id="stockSmall" name="stockSmall" placeholder="Small Stock">
            <input type="number" class="form-control mb-2" id="stockMedium" name="stockMedium" placeholder="Medium Stock">
            <input type="number" class="form-control" id="stockLarge" name="stockLarge" placeholder="Large Stock">
          </div>
          <button type="submit" class="btn btn-warning">Update Stock</button>
          
        </form>
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    // Toggle listing functionality
    document.querySelectorAll('.toggle-btn').forEach(button => {
      button.addEventListener('click', async function () {
        const productId = this.dataset.id;
        try {
          const response = await fetch(`/admin/product/${productId}/listing`, {
            method: 'PATCH',
            headers: { 'Content-Type': 'application/json' }
          });
          const data = await response.json();

          if (response.ok) {
            Swal.fire('Success!', data.message, 'success').then(() => location.reload());
          } else {
            Swal.fire('Error!', data.message || 'Failed to toggle listing.', 'error');
          }
        } catch (error) {
          Swal.fire('Error!', 'An error occurred while toggling listing.', 'error');
        }
      });
    });

    // Delete product functionality
    document.querySelectorAll('.delete-btn').forEach(button => {
      button.addEventListener('click', async function () {
        const productId = this.dataset.id;
        const result = await Swal.fire({
          title: 'Are you sure?',
          text: "You won't be able to revert this!",
          icon: 'warning',
          showCancelButton: true,
          confirmButtonColor: '#3085d6',
          cancelButtonColor: '#d33',
          confirmButtonText: 'Yes, delete it!'
        });

        if (result.isConfirmed) {
          try {
            const response = await fetch(`/admin/product/${productId}`, {
              method: 'DELETE',
              headers: { 'Content-Type': 'application/json' }
            });
            const data = await response.json();

            if (response.ok) {
              Swal.fire('Deleted!', data.message, 'success').then(() => location.reload());
            } else {
              Swal.fire('Error!', data.message || 'An error occurred while deleting the product.', 'error');
            }
          } catch (error) {
            Swal.fire('Error!', 'An error occurred while deleting the product.', 'error');
          }
        }
      });
    });

    // Open stock update modal
    document.querySelectorAll('.stock-update-btn').forEach(button => {
      button.addEventListener('click', function () {
        const productId = this.dataset.id;
        const stockSmall = this.dataset.stockSmall || 0;
        const stockMedium = this.dataset.stockMedium || 0;
        const stockLarge = this.dataset.stockLarge || 0;

        // Set values in modal inputs
        document.getElementById('productId').value = productId;
        document.getElementById('stockSmall').value = stockSmall;
        document.getElementById('stockMedium').value = stockMedium;
        document.getElementById('stockLarge').value = stockLarge;

        // Show the modal
        new bootstrap.Modal(document.getElementById('stockUpdateModal')).show();
      });
    });

    // Handle stock update form submission
    document.getElementById('stockUpdateForm').addEventListener('submit', async function (e) {
      e.preventDefault();

      const productId = document.getElementById('productId').value;
      const stockSmall = document.getElementById('stockSmall').value;
      const stockMedium = document.getElementById('stockMedium').value;
      const stockLarge = document.getElementById('stockLarge').value;

      try {
        const response = await fetch(`/admin/product/${productId}/stock`, {
          method: 'PATCH',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({
            stockSmall: Number(stockSmall),
            stockMedium: Number(stockMedium),
            stockLarge: Number(stockLarge)
          })
        });

        const data = await response.json();

        if (response.ok) {
          Swal.fire('Success!', data.message, 'success').then(() => location.reload());
        } else {
          Swal.fire('Error!', data.message || 'Failed to update stock.', 'error');
        }
      } catch (error) {
        Swal.fire('Error!', 'An error occurred while updating the stock.', 'error');
      }
    });
  });
</script>

<%- include('../partials/footer') %>

<!-- Custom Styles -->
<style>
  .large-badge {
    font-size: 1.2rem;
    font-weight: bold;
  }
  .user-table th, .user-table td {
    padding: 12px 15px;
    text-align: left;
    border-bottom: 1px solid #ddd;
    vertical-align: middle;
  }
  .user-table th:nth-child(4), .user-table td:nth-child(4) {
    padding-right: 30px;
  }
  .user-table th:nth-child(5), .user-table td:nth-child(5) {
    padding-left: 30px;
  }
  .sidebar .logout {
    margin-top: auto;
    background: #e74c3c;
    color: white;
    padding: 10px 20px;
    border-radius: 5px;
    text-decoration: none;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: 0.3s;
  }
  .sidebar .logout:hover {
    background: #c0392b;
  }
  .admin-container { display: flex; height: 100vh; background: #f5f5f5; }
  .sidebar { width: 250px; background: #2c3e50; color: white; padding: 20px; display: flex; flex-direction: column; }
  .sidebar .logo { text-align: center; font-size: 22px; font-weight: bold; margin-bottom: 30px; }
  .nav { list-style: none; padding: 0; }
  .nav li { margin: 10px 0; }
  .nav a { color: white; text-decoration: none; font-size: 16px; display: flex; align-items: center; padding: 12px; border-radius: 5px; transition: 0.3s; }
  .nav a i { margin-right: 10px; font-size: 20px; }
  .nav a:hover, .nav a.active { background: rgba(255, 255, 255, 0.2); }
  .content { flex-grow: 1; padding: 40px; }
  .header h2 { color: #2c3e50; margin-bottom: 20px; }
  .table-container { background: white; padding: 20px; border-radius: 10px; box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1); }
  .user-table { width: 100%; border-collapse: collapse; }
  .user-table th { background: #2c3e50; color: white; }
  .avatar { width: 40px; height: 40px; border-radius: 50%; }
  .toggle-btn { font-size: 30px; cursor: pointer; }
  .toggle-btn:hover { color: #007bff; }
</style>